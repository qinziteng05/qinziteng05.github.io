<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>MySQL数据库备份脚本</title>
    <link href="/2022/11/12/MySQL%E6%95%B0%E6%8D%AE%E5%BA%93%E5%A4%87%E4%BB%BD%E8%84%9A%E6%9C%AC/"/>
    <url>/2022/11/12/MySQL%E6%95%B0%E6%8D%AE%E5%BA%93%E5%A4%87%E4%BB%BD%E8%84%9A%E6%9C%AC/</url>
    
    <content type="html"><![CDATA[<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><code class="hljs BASH"><span class="hljs-meta">#!/bin/bash</span><br><span class="hljs-comment"># 定义备份用户/密码</span><br>DbUser=root<br>DbPasswd=NTQ12377&amp;*%(<br> <br><span class="hljs-comment"># 定义备份数据库</span><br>DbName=(<span class="hljs-string">&quot;zabbix&quot;</span> <span class="hljs-string">&quot;jumpserver&quot;</span> <span class="hljs-string">&quot;openfire&quot;</span> <span class="hljs-string">&quot;n9e&quot;</span> <span class="hljs-string">&quot;n9e_v5&quot;</span> <span class="hljs-string">&quot;ibex&quot;</span>)<br><span class="hljs-comment"># 定义备份目录</span><br>Path=/daSQL<br><span class="hljs-comment"># 定义备份数据保存天数 Mtime=3+1 天数也就是4天</span><br>Mtime=3<br> <br>Time=$(<span class="hljs-built_in">date</span> +%F)<br>CurrentPath=$(<span class="hljs-built_in">pwd</span>)<br> <br><span class="hljs-keyword">if</span> ! [ -d <span class="hljs-variable">$&#123;Path&#125;</span> ];<span class="hljs-keyword">then</span><br>    <span class="hljs-built_in">mkdir</span> <span class="hljs-variable">$&#123;Path&#125;</span><br><span class="hljs-keyword">fi</span><br> <br><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-variable">$&#123;DbName[@]&#125;</span>;<span class="hljs-keyword">do</span><br>    <span class="hljs-keyword">if</span> [ -d <span class="hljs-variable">$&#123;Path&#125;</span>/<span class="hljs-variable">$&#123;Time&#125;</span> ];<span class="hljs-keyword">then</span><br>        <span class="hljs-built_in">cd</span> <span class="hljs-variable">$&#123;Path&#125;</span>/<span class="hljs-variable">$&#123;Time&#125;</span><br>    <span class="hljs-keyword">else</span><br>        <span class="hljs-built_in">mkdir</span> <span class="hljs-variable">$&#123;Path&#125;</span>/<span class="hljs-variable">$&#123;Time&#125;</span> &amp;&amp; <span class="hljs-built_in">cd</span> <span class="hljs-variable">$&#123;Path&#125;</span>/<span class="hljs-variable">$&#123;Time&#125;</span><br>    <span class="hljs-keyword">fi</span><br>          mysqldump -f -x  -u<span class="hljs-variable">$&#123;DbUser&#125;</span> -p<span class="hljs-variable">$&#123;DbPasswd&#125;</span> <span class="hljs-variable">$&#123;i&#125;</span> &gt;<span class="hljs-variable">$&#123;i&#125;</span>.sql<br>  zip <span class="hljs-variable">$&#123;i&#125;</span>.zip <span class="hljs-variable">$&#123;i&#125;</span>.sql<br>  <span class="hljs-built_in">rm</span> -f <span class="hljs-variable">$&#123;i&#125;</span>.sql<br><span class="hljs-keyword">done</span><br> <br><span class="hljs-built_in">cd</span> <span class="hljs-variable">$&#123;Path&#125;</span> &amp;&amp; find <span class="hljs-variable">$&#123;Path&#125;</span> -name <span class="hljs-string">&#x27;*.sql&#x27;</span> -mtime +<span class="hljs-variable">$&#123;Mtime&#125;</span>|awk -F<span class="hljs-string">&quot;/&quot;</span> <span class="hljs-string">&#x27;&#123;print $3&#125;&#x27;</span>|xargs <span class="hljs-built_in">rm</span> -rf<br> <br><span class="hljs-comment"># 定时任务 自动添加</span><br><span class="hljs-keyword">if</span> ! (grep -r <span class="hljs-variable">$&#123;CurrentPath&#125;</span>/<span class="hljs-variable">$&#123;0&#125;</span> /var/spool/cron/root &amp;&gt;/dev/null);<span class="hljs-keyword">then</span><br><span class="hljs-built_in">echo</span> &gt;&gt; /var/spool/cron/root<br><span class="hljs-built_in">echo</span> <span class="hljs-string">&quot;#DBServer: Backup Database&quot;</span> &gt;&gt; /var/spool/cron/root<br>    <span class="hljs-built_in">echo</span> <span class="hljs-string">&quot;0 1 * * * bash <span class="hljs-variable">$&#123;CurrentPath&#125;</span>/<span class="hljs-variable">$&#123;0&#125;</span> &gt;&gt; db_backup.log&quot;</span> &gt;&gt; /var/spool/cron/root<br><span class="hljs-keyword">fi</span><br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>Shell脚本</category>
      
      <category>MySQL</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Shell</tag>
      
      <tag>MySQL</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Linux端口检查脚本</title>
    <link href="/2022/11/12/Linux%E7%AB%AF%E5%8F%A3%E6%A3%80%E6%9F%A5/"/>
    <url>/2022/11/12/Linux%E7%AB%AF%E5%8F%A3%E6%A3%80%E6%9F%A5/</url>
    
    <content type="html"><![CDATA[<p>检查定义好的服务端口是否启用 用于出现错误时第一时间执行脚本查看是否有服务Down掉了，如果没有在继续排查其他原因。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-meta">#!/bin/bash</span><br>. /etc/init.d/functions<br>clear<br> <br><span class="hljs-built_in">printf</span> <span class="hljs-string">&quot;中间件信息:\n&quot;</span><br>Port=(<span class="hljs-string">&quot;80&quot;</span> <span class="hljs-string">&quot;3306&quot;</span> <span class="hljs-string">&quot;6379&quot;</span> <span class="hljs-string">&quot;38080&quot;</span> <span class="hljs-string">&quot;61616&quot;</span> <span class="hljs-string">&quot;8161&quot;</span> <span class="hljs-string">&quot;7070&quot;</span> <span class="hljs-string">&quot;9090&quot;</span> <span class="hljs-string">&quot;22122&quot;</span> <span class="hljs-string">&quot;23000&quot;</span> <span class="hljs-string">&quot;9200&quot;</span>)<br> <br>Serve=(<span class="hljs-string">&quot;Nginx&quot;</span> <span class="hljs-string">&quot;Mysql&quot;</span> <span class="hljs-string">&quot;Redis&quot;</span> <span class="hljs-string">&quot;Tomcat&quot;</span> <span class="hljs-string">&quot;ActiveMQ&quot;</span> <span class="hljs-string">&quot;ActiveMQ_web&quot;</span> <span class="hljs-string">&quot;Openfire&quot;</span> <span class="hljs-string">&quot;Openfire_web&quot;</span> <span class="hljs-string">&quot;Fdfs_trackerd&quot;</span> <span class="hljs-string">&quot;Fdfs_storaged&quot;</span> <span class="hljs-string">&quot;Elasticsearch&quot;</span>)<br> <br><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-variable">$&#123;!Port[@]&#125;</span>;<span class="hljs-keyword">do</span><br>    <span class="hljs-keyword">if</span> (lsof -i:<span class="hljs-variable">$&#123;Port[i]&#125;</span> &amp;&gt;/dev/null);<span class="hljs-keyword">then</span><br>        action <span class="hljs-string">&quot;<span class="hljs-variable">$&#123;Serve[i]&#125;</span>: <span class="hljs-variable">$&#123;Port[i]&#125;</span>&quot;</span><br>    <span class="hljs-keyword">else</span><br>action <span class="hljs-string">&quot;<span class="hljs-variable">$&#123;Serve[i]&#125;</span>: <span class="hljs-variable">$&#123;Port[i]&#125;</span>&quot;</span> <span class="hljs-literal">false</span><br>    <span class="hljs-keyword">fi</span><br><span class="hljs-keyword">done</span><br></code></pre></td></tr></table></figure><p>思路：<br>1、定义两个数组分别存放 端口号和服务名称<br>2、端口号和服务名称是一一对应的<br>3、通过for循环检查端口是否正常并打印结果</p>]]></content>
    
    
    <categories>
      
      <category>Shell脚本</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Shell</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Linux系统配置检查脚本</title>
    <link href="/2022/11/11/Linux%E9%85%8D%E7%BD%AE%E6%A3%80%E6%B5%8B%E8%84%9A%E6%9C%AC/"/>
    <url>/2022/11/11/Linux%E9%85%8D%E7%BD%AE%E6%A3%80%E6%B5%8B%E8%84%9A%E6%9C%AC/</url>
    
    <content type="html"><![CDATA[<p>事情的原委：统计记录机房服务器资源配置等信息，由于没有监控系统，当时就是很繁琐的使用Linux命令查看记录，这导致浪费大量时间浪费在这种繁琐的工作上，时间就是金钱，为了避免以后有类似的事情发生，利用空闲时间把这个脚本写出来了，主要用于查看Linux服务器当前配置以及资源使用情况，有同样需求的小伙伴建议直接拿去复用！！</p><p>还实现了输出系统当前占有内存、CPU 最高的Top10信息 方便运维人员判断进程是否正常，每执行一次会打印结果并输出到日志文件中。<br>内存使用率是使用bc命令计算的 要保证系统已经有bc命令了。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br></pre></td><td class="code"><pre><code class="hljs bash">[root@haimati shell]<span class="hljs-comment"># cat polling.sh </span><br><span class="hljs-comment">#!/bin/bash</span><br>&lt;&lt; <span class="hljs-string">Comment</span><br><span class="hljs-string">作者: 秦子腾</span><br><span class="hljs-string">邮箱: qinziteng05@163.com</span><br><span class="hljs-string">日期: 2022-5-14 18:35</span><br><span class="hljs-string">Comment</span><br> <br>clear<br>LogFileName=polling.$(<span class="hljs-built_in">date</span> +%F-%T)<br>EchoFormat=$(<span class="hljs-keyword">for</span> (( i=0;i&lt;30;i++ ));<span class="hljs-keyword">do</span> <span class="hljs-built_in">echo</span> -n <span class="hljs-string">&quot;=&quot;</span>;<span class="hljs-keyword">done</span>)<br><span class="hljs-comment"># 系统信息</span><br><span class="hljs-function"><span class="hljs-title">SystemInfo</span></span>()&#123;<br><span class="hljs-built_in">printf</span> <span class="hljs-string">&quot;<span class="hljs-variable">$&#123;EchoFormat&#125;</span> 系统信息 <span class="hljs-variable">$&#123;EchoFormat&#125;</span>\n&quot;</span><br><span class="hljs-built_in">printf</span> <span class="hljs-string">&quot;系统类型: %-10s\n&quot;</span> $(<span class="hljs-built_in">uname</span> -a| awk <span class="hljs-string">&#x27;&#123;print $NF&#125;&#x27;</span>)<br><span class="hljs-built_in">printf</span> <span class="hljs-string">&quot;发行版本: %-10s\n&quot;</span> <span class="hljs-string">&quot;<span class="hljs-subst">$(cat /etc/redhat-release)</span>&quot;</span><br><span class="hljs-built_in">printf</span> <span class="hljs-string">&quot;内核信息: %-10s\n&quot;</span> $(<span class="hljs-built_in">uname</span> -r)<br><span class="hljs-built_in">printf</span> <span class="hljs-string">&quot;主机名称: %-10s\n&quot;</span> $(<span class="hljs-built_in">uname</span> -n)<br><span class="hljs-built_in">printf</span> <span class="hljs-string">&quot;语言编码: %-10s\n&quot;</span> <span class="hljs-variable">$&#123;LANG&#125;</span><br><span class="hljs-built_in">printf</span> <span class="hljs-string">&quot;当前系统时间: %-10s %-10s\n&quot;</span> $(<span class="hljs-built_in">date</span> +%F) $(<span class="hljs-built_in">date</span> +%T)<br><span class="hljs-built_in">printf</span> <span class="hljs-string">&quot;当前系统负载: %-4s %-1s\n&quot;</span> $(<span class="hljs-built_in">uptime</span> | awk -F: <span class="hljs-string">&#x27;&#123;print $5 &#125;&#x27;</span>|awk -F, <span class="hljs-string">&#x27;&#123;print $1,&quot;%&quot;&#125;&#x27;</span>)<br><span class="hljs-built_in">printf</span> <span class="hljs-string">&quot;系统运行天数: %-10s\n&quot;</span> $(<span class="hljs-built_in">uptime</span> |awk <span class="hljs-string">&#x27;&#123;print $3&#125;&#x27;</span>)<br><span class="hljs-built_in">printf</span> <span class="hljs-string">&quot;当前在线用户数量: %-3s\n&quot;</span> $(w|<span class="hljs-built_in">tail</span> -n +3|<span class="hljs-built_in">wc</span> -l)<br><span class="hljs-built_in">printf</span> <span class="hljs-string">&quot;SELinux : %-10s\n&quot;</span> $(grep <span class="hljs-string">&quot;SELINUX=[d|e|p]&quot;</span> /etc/selinux/config |awk -F= <span class="hljs-string">&#x27;&#123;print $2&#125;&#x27;</span>)<br>&#125;<br> <br><span class="hljs-comment"># CPU信息</span><br><span class="hljs-function"><span class="hljs-title">CpuInfo</span></span>()&#123;<br>MemonyId=$(top -b -n1|awk <span class="hljs-string">&#x27;NR==3&#x27;</span>|awk -F, <span class="hljs-string">&#x27;&#123;print $4&#125;&#x27;</span>| <span class="hljs-built_in">cut</span> -c 1-5)<br>MemonyUse=$(<span class="hljs-built_in">echo</span> <span class="hljs-string">&quot;100-<span class="hljs-variable">$&#123;MemonyId&#125;</span>&quot;</span> |bc)<br><span class="hljs-built_in">printf</span> <span class="hljs-string">&quot;<span class="hljs-variable">$&#123;EchoFormat&#125;</span> CPU信息 <span class="hljs-variable">$&#123;EchoFormat&#125;</span>\n&quot;</span><br><span class="hljs-built_in">printf</span> <span class="hljs-string">&quot;逻辑CPU核数: %-3s\n&quot;</span> $(grep <span class="hljs-string">&quot;processor&quot;</span> /proc/cpuinfo|<span class="hljs-built_in">sort</span> -u|<span class="hljs-built_in">wc</span> -l)<br><span class="hljs-built_in">printf</span> <span class="hljs-string">&quot;物理CPU核数: %-3s\n&quot;</span> $(grep <span class="hljs-string">&quot;physical id&quot;</span> /proc/cpuinfo |<span class="hljs-built_in">sort</span> -u|<span class="hljs-built_in">wc</span> -l)<br><span class="hljs-built_in">printf</span> <span class="hljs-string">&quot;CPU架构: %-3s\n&quot;</span> $(<span class="hljs-built_in">uname</span> -m)<br><span class="hljs-built_in">printf</span> <span class="hljs-string">&quot;CPU设置型号: %-3s\n&quot;</span> <span class="hljs-string">&quot;<span class="hljs-subst">$(grep <span class="hljs-string">&quot;model name&quot;</span> /proc/cpuinfo |awk -F: &#x27;&#123;print $2&#125;&#x27;|sort -u|cut -c 2-50)</span>&quot;</span><br><span class="hljs-built_in">printf</span> <span class="hljs-string">&quot;使用CPU占比: %-1s %-1s\n&quot;</span> <span class="hljs-variable">$&#123;MemonyUse&#125;</span> %<br><span class="hljs-built_in">printf</span> <span class="hljs-string">&quot;空闲CPU占比: %-1s %-1s\n&quot;</span> <span class="hljs-variable">$&#123;MemonyId&#125;</span> %<br><span class="hljs-built_in">printf</span> <span class="hljs-string">&quot;占用CPU Top10信息:\n\n&quot;</span><br>ps -eo user,pid,pcpu,pmem,args --<span class="hljs-built_in">sort</span>=-pcpu  |<span class="hljs-built_in">head</span> -n 10<br>&#125;<br> <br><span class="hljs-comment"># Memory信息</span><br><span class="hljs-function"><span class="hljs-title">MemoryInfo</span></span>()&#123;<br><span class="hljs-built_in">printf</span> <span class="hljs-string">&quot;<span class="hljs-variable">$&#123;EchoFormat&#125;</span> 内存信息 <span class="hljs-variable">$&#123;EchoFormat&#125;</span>\n&quot;</span><br><span class="hljs-built_in">printf</span> <span class="hljs-string">&quot;总共内存: %-1s\n&quot;</span> $(free -mh|awk <span class="hljs-string">&quot;NR==2&quot;</span>|awk <span class="hljs-string">&#x27;&#123;print $2&#125;&#x27;</span>)<br><span class="hljs-built_in">printf</span> <span class="hljs-string">&quot;使用内存: %-1s\n&quot;</span> $(free -mh|awk <span class="hljs-string">&quot;NR==2&quot;</span>|awk <span class="hljs-string">&#x27;&#123;print $3&#125;&#x27;</span>)<br><span class="hljs-built_in">printf</span> <span class="hljs-string">&quot;剩余内存: %-1s\n&quot;</span> $(free -mh|awk <span class="hljs-string">&quot;NR==2&quot;</span>|awk <span class="hljs-string">&#x27;&#123;print $4&#125;&#x27;</span>)<br><span class="hljs-built_in">printf</span> <span class="hljs-string">&quot;内存使用占比: %-1s %-1s\n&quot;</span> $(free | grep -i mem |awk <span class="hljs-string">&#x27;&#123;print $6/$2*100&#125;&#x27;</span>|<span class="hljs-built_in">cut</span> -c1-5) %<br><span class="hljs-built_in">printf</span> <span class="hljs-string">&quot;占用内存 Top10信息:\n\n&quot;</span><br>ps -eo user,pid,pcpu,pmem,args --<span class="hljs-built_in">sort</span>=-pmem  |<span class="hljs-built_in">head</span> -n 10<br>&#125;<br> <br><span class="hljs-comment"># Swap信息</span><br><span class="hljs-function"><span class="hljs-title">SwapInfo</span></span>()&#123;<br><span class="hljs-built_in">printf</span> <span class="hljs-string">&quot;<span class="hljs-variable">$&#123;EchoFormat&#125;</span> Swap信息 <span class="hljs-variable">$&#123;EchoFormat&#125;</span>\n&quot;</span><br><span class="hljs-built_in">printf</span> <span class="hljs-string">&quot;总共Swap: %-1s\n&quot;</span> $(free -mh|awk <span class="hljs-string">&quot;NR==3&quot;</span>|awk <span class="hljs-string">&#x27;&#123;print $2&#125;&#x27;</span>)<br><span class="hljs-built_in">printf</span> <span class="hljs-string">&quot;已使用Swap: %-1s\n&quot;</span> $(free -mh|awk <span class="hljs-string">&quot;NR==3&quot;</span>|awk <span class="hljs-string">&#x27;&#123;print $3&#125;&#x27;</span>)<br><span class="hljs-built_in">printf</span> <span class="hljs-string">&quot;剩余Swap: %-1s\n&quot;</span> $(free -mh|awk <span class="hljs-string">&quot;NR==3&quot;</span>|awk <span class="hljs-string">&#x27;&#123;print $4&#125;&#x27;</span>)<br>&#125;<br> <br><span class="hljs-comment"># 网络信息</span><br><span class="hljs-function"><span class="hljs-title">NetworkInfo</span></span>()&#123;<br><span class="hljs-built_in">printf</span> <span class="hljs-string">&quot;<span class="hljs-variable">$&#123;EchoFormat&#125;</span> 网络信息 <span class="hljs-variable">$&#123;EchoFormat&#125;</span>\n&quot;</span><br><span class="hljs-built_in">printf</span> <span class="hljs-string">&quot;IP地址: %-1s %-1s %-1s %-1s\n&quot;</span> $(ifconfig -a|grep inet|grep -v 127.0.0.1|grep -v inet6|awk <span class="hljs-string">&#x27;&#123;print $2&#125;&#x27;</span>|<span class="hljs-built_in">tr</span> -d <span class="hljs-string">&quot;addr:&quot;</span>)<br><span class="hljs-built_in">printf</span> <span class="hljs-string">&quot;网关: %-1s %-1s %-1s %-1s\n&quot;</span> $(ifconfig -a|grep <span class="hljs-string">&quot;netmask&quot;</span>|grep -v 127.0.0.1|awk <span class="hljs-string">&#x27;&#123;print $4&#125;&#x27;</span>) <br><span class="hljs-built_in">printf</span> <span class="hljs-string">&quot;DNS: %-1s %-1s %-1s %-1s %-1s\n&quot;</span> $(grep <span class="hljs-string">&quot;nameserver&quot;</span> /etc/resolv.conf | awk <span class="hljs-string">&#x27;&#123;print $2&#125;&#x27;</span>)<br><span class="hljs-keyword">if</span> (ping -c2 -w2 www.baidu.com &amp;&gt;/dev/null);<span class="hljs-keyword">then</span><br><span class="hljs-built_in">printf</span> <span class="hljs-string">&quot;网络连通性: %s\n&quot;</span> YES<br><span class="hljs-keyword">else</span><br><span class="hljs-built_in">printf</span> <span class="hljs-string">&quot;网络连通性: %s\n&quot;</span> NO<br><span class="hljs-keyword">fi</span><br> <br><span class="hljs-built_in">printf</span> <span class="hljs-string">&quot;路由表信息:\n\n&quot;</span><br>route -n|<span class="hljs-built_in">tail</span> -n +2<br>&#125;<br> <br><span class="hljs-function"><span class="hljs-title">All</span></span>()&#123;<br>SystemInfo <br>CpuInfo<br>MemoryInfo<br>SwapInfo<br>NetworkInfo<br>&#125;<br>All &gt;<span class="hljs-variable">$&#123;LogFileName&#125;</span>;less <span class="hljs-variable">$&#123;LogFileName&#125;</span><br></code></pre></td></tr></table></figure><p>最终效果：</p><p><img src="/%5Cimg%5Cbook%5C2.gif" alt="2.gif"></p>]]></content>
    
    
    <categories>
      
      <category>Shell脚本</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Shell</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Linux网卡流量监控脚本</title>
    <link href="/2022/11/11/Linux%E7%BD%91%E5%8D%A1%E6%B5%81%E9%87%8F%E7%9B%91%E6%8E%A7%E8%84%9A%E6%9C%AC/"/>
    <url>/2022/11/11/Linux%E7%BD%91%E5%8D%A1%E6%B5%81%E9%87%8F%E7%9B%91%E6%8E%A7%E8%84%9A%E6%9C%AC/</url>
    
    <content type="html"><![CDATA[<p>作用: 实时监控网卡 进&#x2F;出 流量<br>语法: bash netmon.sh 网卡名称 [可选参数]</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br></pre></td><td class="code"><pre><code class="hljs bash">[root@haimati ~]<span class="hljs-comment"># cat netmon.sh</span><br><span class="hljs-comment">#!/bin/bash</span><br>&lt;&lt; <span class="hljs-string">Comment</span><br><span class="hljs-string">作者: 秦子腾</span><br><span class="hljs-string">邮箱: qinziteng05@163.com</span><br><span class="hljs-string">日期: 2022-5-15 23:02</span><br><span class="hljs-string">Comment</span><br> <br>Format=$(<span class="hljs-built_in">printf</span> <span class="hljs-string">&quot;\033[33m\t 监控 <span class="hljs-variable">$&#123;1&#125;</span> 设备信息\033[0m\n&quot;</span>)<br><span class="hljs-function"><span class="hljs-title">KB</span></span>()&#123;<br><span class="hljs-keyword">for</span> ((;;));<span class="hljs-keyword">do</span><br>    InOld=$(<span class="hljs-built_in">cat</span> /proc/net/dev| awk /<span class="hljs-variable">$&#123;1&#125;</span>/<span class="hljs-string">&#x27;&#123;print $2&#125;&#x27;</span>)<br>    OutOld=$(<span class="hljs-built_in">cat</span> /proc/net/dev| awk /<span class="hljs-variable">$&#123;1&#125;</span>/<span class="hljs-string">&#x27;&#123;print $10&#125;&#x27;</span>)<br>    <span class="hljs-built_in">sleep</span> 1<br>    InNew=$(<span class="hljs-built_in">cat</span> /proc/net/dev| awk /<span class="hljs-variable">$&#123;1&#125;</span>/<span class="hljs-string">&#x27;&#123;print $2&#125;&#x27;</span>)<br>    OutNew=$(<span class="hljs-built_in">cat</span> /proc/net/dev| awk /<span class="hljs-variable">$&#123;1&#125;</span>/<span class="hljs-string">&#x27;&#123;print $10&#125;&#x27;</span>)<br>    <span class="hljs-built_in">printf</span> <span class="hljs-string">&quot;\033[32m IN流量: %.1f %s\t Out流量: %.1f %s\033[0m\n&quot;</span> \<br><span class="hljs-string">&quot;<span class="hljs-subst">$((($&#123;InNew&#125;-$&#123;InOld&#125;)</span>/1024))&quot;</span> <span class="hljs-string">&quot;KB/s&quot;</span> \<br><span class="hljs-string">&quot;<span class="hljs-subst">$((($&#123;OutNew&#125;-$&#123;OutOld&#125;)</span>/1024))&quot;</span> <span class="hljs-string">&quot;KB/s&quot;</span><br><span class="hljs-keyword">done</span><br>&#125;<br> <br> <br><span class="hljs-function"><span class="hljs-title">MB</span></span>()&#123;<br><span class="hljs-keyword">for</span> ((;;));<span class="hljs-keyword">do</span><br>    InOld=$(<span class="hljs-built_in">cat</span> /proc/net/dev| awk /<span class="hljs-variable">$&#123;1&#125;</span>/<span class="hljs-string">&#x27;&#123;print $2&#125;&#x27;</span>)<br>    OutOld=$(<span class="hljs-built_in">cat</span> /proc/net/dev| awk /<span class="hljs-variable">$&#123;1&#125;</span>/<span class="hljs-string">&#x27;&#123;print $10&#125;&#x27;</span>)<br>    <span class="hljs-built_in">sleep</span> 1<br>    InNew=$(<span class="hljs-built_in">cat</span> /proc/net/dev| awk /<span class="hljs-variable">$&#123;1&#125;</span>/<span class="hljs-string">&#x27;&#123;print $2&#125;&#x27;</span>)<br>    OutNew=$(<span class="hljs-built_in">cat</span> /proc/net/dev| awk /<span class="hljs-variable">$&#123;1&#125;</span>/<span class="hljs-string">&#x27;&#123;print $10&#125;&#x27;</span>)<br>    <span class="hljs-built_in">printf</span> <span class="hljs-string">&quot;\033[32m IN流量: %.1f %s\t Out流量: %.1f %s\033[0m\n&quot;</span> \<br><span class="hljs-string">&quot;<span class="hljs-subst">$((($&#123;InNew&#125;-$&#123;InOld&#125;)</span>/1024/1024))&quot;</span> <span class="hljs-string">&quot;MB/s&quot;</span> \<br><span class="hljs-string">&quot;<span class="hljs-subst">$((($&#123;OutNew&#125;-$&#123;OutOld&#125;)</span>/1024/1024))&quot;</span> <span class="hljs-string">&quot;MB/s&quot;</span><br><span class="hljs-keyword">done</span><br>&#125;<br> <br><span class="hljs-keyword">if</span> [ -z <span class="hljs-variable">$&#123;2&#125;</span> ];<span class="hljs-keyword">then</span><br>   <span class="hljs-built_in">printf</span> <span class="hljs-string">&quot;<span class="hljs-variable">$&#123;Format&#125;</span>\n&quot;</span><br>   KB <span class="hljs-variable">$&#123;1&#125;</span><br><span class="hljs-keyword">fi</span><br> <br><span class="hljs-keyword">case</span> <span class="hljs-string">&quot;<span class="hljs-variable">$&#123;2&#125;</span>&quot;</span> <span class="hljs-keyword">in</span> <br><span class="hljs-string">&quot;-k&quot;</span>) <br>    <span class="hljs-built_in">printf</span> <span class="hljs-string">&quot;<span class="hljs-variable">$&#123;Format&#125;</span>\n&quot;</span><br>    KB <span class="hljs-variable">$&#123;1&#125;</span><br>;;<br><span class="hljs-string">&quot;-m&quot;</span>)<br>    <span class="hljs-built_in">printf</span> <span class="hljs-string">&quot;<span class="hljs-variable">$&#123;Format&#125;</span>\n&quot;</span><br>    MB <span class="hljs-variable">$&#123;1&#125;</span><br>;;<br>*)<br><span class="hljs-built_in">cat</span> &lt;&lt;<span class="hljs-string">EOF</span><br><span class="hljs-string">语法: bash $&#123;0&#125; 网卡名称 [参数]</span><br><span class="hljs-string">    -k: KB/s为单位输出(默认)</span><br><span class="hljs-string">    -m: MB/S为单位输出</span><br><span class="hljs-string">EOF</span><br><span class="hljs-keyword">esac</span><br></code></pre></td></tr></table></figure><p>执行脚本:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">chmod</span> +x netmon.sh<br>./netmon.sh eth0<br></code></pre></td></tr></table></figure><p>效果预览:</p><p><img src="/%5Cimg%5Cbook%5C1.gif" alt="x"></p><p>我这台云服务最高带宽是2M 所以测试最高也不会超过2MB&#x2F;s</p>]]></content>
    
    
    <categories>
      
      <category>Shell脚本</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Shell</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Linux本地Yum源搭建脚本</title>
    <link href="/2022/11/11/Linux%E6%9C%AC%E5%9C%B0yum%E6%90%AD%E5%BB%BA/"/>
    <url>/2022/11/11/Linux%E6%9C%AC%E5%9C%B0yum%E6%90%AD%E5%BB%BA/</url>
    
    <content type="html"><![CDATA[<p><strong>说明:</strong></p><ul><li>1、上传系统对应的ISO镜像文件到服务器</li><li>2、编辑此脚本 指定 <code>IsoPath</code> 变量位置为 ISO当前位置</li><li>3、执行脚本</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-meta">#!/bin/bash</span><br>. /etc/init.d/functions<br><span class="hljs-comment"># 定义ISO镜像位置</span><br>IsoPath=/root/CentOS-7-x86_64-DVD-1708.iso<br>Time=$(<span class="hljs-built_in">date</span> +%F).bak<br> <br><span class="hljs-function"><span class="hljs-title">Yum</span></span>()&#123;<br><span class="hljs-built_in">mkdir</span> /mnt/centos <br>mount <span class="hljs-variable">$&#123;IsoPath&#125;</span> /mnt/centos<br> <br>(<span class="hljs-built_in">mkdir</span> /etc/yum.repos.d/<span class="hljs-variable">$&#123;Time&#125;</span><br><span class="hljs-built_in">mv</span> /etc/yum.repos.d/* /etc/yum.repos.d/<span class="hljs-variable">$&#123;Time&#125;</span>)<br> <br><br><span class="hljs-built_in">cat</span> &gt;&gt; /etc/yum.repos.d/localhost.repo &lt;&lt;<span class="hljs-string">EOF</span><br><span class="hljs-string">[localhost]</span><br><span class="hljs-string">name=localhost</span><br><span class="hljs-string">baseurl=file:///mnt/centos</span><br><span class="hljs-string">gpgcheck=0</span><br><span class="hljs-string">enabled=1</span><br><span class="hljs-string">EOF</span><br>yum clean all<br>&#125;<br> <br>Yum &amp;&gt;/dev/null<br> <br><span class="hljs-keyword">if</span> (yum -y install bc-1.06.95-13.el7.x86_64 &amp;&gt;/dev/null);<span class="hljs-keyword">then</span><br>action <span class="hljs-string">&quot;Yum:&quot;</span><br><span class="hljs-keyword">else</span><br>action <span class="hljs-string">&quot;Yum:&quot;</span> <span class="hljs-literal">false</span><br><span class="hljs-keyword">fi</span><br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>Shell脚本</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Shell</tag>
      
    </tags>
    
  </entry>
  
  
  
  
</search>
